import streamlit as st
import pandas as pd
import plotly.express as px

# --- 1. –ù–ê–°–¢–†–û–ô–ö–ò –°–¢–†–ê–ù–ò–¶–´ ---
# –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–≤–æ–π
st.set_page_config(
    page_title="–ê–Ω–∞–ª–∏–∑ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–§",
    page_icon="üá∑üá∫",
    layout="wide"
)

st.title("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥: –°–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–§")

# --- 2. –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –ò–ó –§–ê–ô–õ–ê ---
# Streamlit –±—É–¥–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã
@st.cache_data
def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ Parquet."""
    try:
        # –î–∞—à–±–æ—Ä–¥ –æ–∂–∏–¥–∞–µ—Ç, —á—Ç–æ —Ä—è–¥–æ–º —Å –Ω–∏–º –µ—Å—Ç—å –ø–∞–ø–∫–∞ 'dashboard_data' —Å —Ñ–∞–π–ª–æ–º –≤–Ω—É—Ç—Ä–∏
        df = pd.read_parquet('dashboard_data/main_data.parquet')
        return df
    except FileNotFoundError:
        st.error(
            "‚ùå –§–∞–π–ª 'dashboard_data/main_data.parquet' –Ω–µ –Ω–∞–π–¥–µ–Ω! "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ —Å–∫—Ä–∏–ø—Ç `prepare_data.py`, "
            "—á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª, –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub."
        )
        return pd.DataFrame()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
main_df = load_data()

# --- 3. –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ò –ò–ù–¢–ï–†–§–ï–ô–° ---
# –í–µ—Å—å –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if not main_df.empty:

    # --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ ---
    st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")

    # –ú—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
    all_regions = sorted(main_df['region'].unique())
    selected_regions = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:",
        options=all_regions,
        default=['–ú–æ—Å–∫–≤–∞', '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢—ã–≤–∞', '–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π']
    )

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
    indicator_options = {
        '–°—Ä–µ–¥–Ω–µ–¥—É—à–µ–≤–æ–π –¥–æ—Ö–æ–¥': 'avg_income',
        '–£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã': 'unemployment_rate',
        '–ú–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ—Å—Ç': 'migration_rate'
    }

    # --- –†–∞–∑–¥–µ–ª 1: –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ –≥–æ–¥–∞–º ---
    st.header("–î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ –≥–æ–¥–∞–º")

    selected_indicator_name = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–Ω–∞–º–∏–∫–∏:",
        options=list(indicator_options.keys())
    )
    selected_indicator_col = indicator_options[selected_indicator_name]

    if not selected_regions:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–≥–∏–æ–Ω –≤ –ø–∞–Ω–µ–ª–∏ —Å–ª–µ–≤–∞.")
    else:
        # –§–∏–ª—å—Ç—Ä—É–µ–º DataFrame –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–≥–∏–æ–Ω–∞–º
        df_filtered = main_df[main_df['region'].isin(selected_regions)]

        # –°—Ç—Ä–æ–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫
        fig_line = px.line(
            df_filtered,
            x='year',
            y=selected_indicator_col,
            color='region',
            title=f"–î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è '{selected_indicator_name}'",
            markers=True,
            labels={'year': '–ì–æ–¥', selected_indicator_col: selected_indicator_name}
        )
        st.plotly_chart(fig_line, use_container_width=True)

    # --- –†–∞–∑–¥–µ–ª 2: –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π ---
    st.header("–ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏")

    last_year = main_df['year'].max()
    selected_year = st.slider(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π:",
        min_value=int(main_df['year'].min()),
        max_value=int(last_year),
        value=int(last_year)
    )

    col1, col2 = st.columns(2)
    with col1:
        x_axis_name = st.selectbox("–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –æ—Å–∏ X:", options=list(indicator_options.keys()), index=0)
    with col2:
        y_axis_name = st.selectbox("–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –æ—Å–∏ Y:", options=list(indicator_options.keys()), index=2)

    x_axis_col = indicator_options[x_axis_name]
    y_axis_col = indicator_options[y_axis_name]

    # --- –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨ ---
    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ò –°–†–ê–ó–£ —É–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –≤ –Ω—É–∂–Ω—ã—Ö –Ω–∞–º –∫–æ–ª–æ–Ω–∫–∞—Ö –µ—Å—Ç—å –ø—Ä–æ–ø—É—Å–∫–∏
    df_corr = main_df[main_df['year'] == selected_year].dropna(subset=[x_axis_col, y_axis_col])
    # --------------------------------

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    if df_corr.empty:
        st.warning(f"–ù–µ—Ç –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ '{x_axis_name}' vs '{y_axis_name}' –∑–∞ {selected_year} –≥–æ–¥.")
    else:
        fig_scatter = px.scatter(
            df_corr,
            x=x_axis_col,
            y=y_axis_col,
            hover_name='region',
            size=x_axis_col,
            color='region',
            title=f"–°–≤—è–∑—å '{x_axis_name}' –∏ '{y_axis_name}' –≤ {selected_year} –≥.",
            trendline='ols',
            labels={x_axis_col: x_axis_name, y_axis_col: y_axis_name},
            color_discrete_map={region: 'rgba(0,0,0,0)' for region in df_corr['region'].unique()}
        )
        st.plotly_chart(fig_scatter, use_container_width=True)

    # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏ ---
    with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏"):
        st.dataframe(main_df)
